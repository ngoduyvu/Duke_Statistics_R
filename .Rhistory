+ cls_students + cls_level + cls_credits + bty_avg
+ pic_outfit + pic_color, data = evals)
summary(m_full_1)
m1 <- lm(score ~ ethnicity + gender + language + age + cls_perc_eval
+ cls_students + cls_level + cls_profs + cls_credits + bty_avg, data = evals)
summary(m1)$adj.r.squared
m1 <- lm(score ~ ethnicity + gender + language + age + cls_perc_eval
+ cls_students + cls_level + cls_profs + cls_credits + bty_avg, data = evals)
summary(m1)$adj.r.squared#Adjusted R-squared:  0.1634
m_full_1 <- lm(score ~ rank + ethnicity + gender + language + age + cls_perc_eval
+ cls_students + cls_level + cls_credits + bty_avg
+ pic_outfit + pic_color, data = evals)
summary(m_full_1)#Adjusted R-squared:  0.1634
m1 <- lm(score ~ ethnicity + gender + language + age + cls_perc_eval
+ cls_students + cls_level + cls_profs + cls_credits + bty_avg, data = evals)
summary(m1)$adj.r.squared#0.1417823
summary(m1)
m2_gender <- lm(score ~ rank + ethnicity + language + age + cls_perc_eval
+ cls_students + cls_level + cls_credits + bty_avg
+ pic_outfit + pic_color, data = evals)
summary(m2_gender)$adj.r.squared#0.1345616
m2_langauge <- lm(score ~ rank + ethnicity + gender + age + cls_perc_eval
+ cls_students + cls_level + cls_credits + bty_avg
+ pic_outfit + pic_color, data = evals)
summary(m2_langauge)$adj.r.squared#0.1417823
m2_age <- lm(score ~ rank + ethnicity + gender + language + cls_perc_eval
+ cls_students + cls_level + cls_credits + bty_avg
+ pic_outfit + pic_color, data = evals)
summary(m2_age)$adj.r.squared#0.1574401
m2_cls_perc_eval <- lm(score ~ rank + ethnicity + gender + language + age
+ cls_students + cls_level + cls_credits + bty_avg
+ pic_outfit + pic_color, data = evals)
summary(m2_cls_perc_eval)$adj.r.squared#0.1499427
m2_cls_students <- lm(score ~ rank + ethnicity + gender + language + age + cls_perc_eval
+ cls_level + cls_credits + bty_avg
+ pic_outfit + pic_color, data = evals)
summary(m2_cls_students)$adj.r.squared#0.1431208
m2_cls_level <- lm(score ~ rank + ethnicity + gender + language + age + cls_perc_eval
+ cls_students + cls_credits + bty_avg
+ pic_outfit + pic_color, data = evals)
summary(m2_cls_level)$adj.r.squared#0.1623604
install.packages("relaimpo")
library(relaimpo)
calc.relimp(m_full, type=c("lmg","last","first","pratt"), rela=TRUE)
library(MASS)
step <- stepAIC(m_full, direction="both")
step$anova
m_bty_avg <- lm(score ~ rank + ethnicity + gender + language + age + cls_perc_eval
+ cls_students + cls_level + cls_profs + cls_credits
+ pic_outfit + pic_color, data = evals)
summary(m_bty_avg)$adj.r.squared#0.1602303
m_cls_profs <- lm(score ~ rank + ethnicity + gender + language + age + cls_perc_eval
+ cls_students + cls_level +  cls_credits + bty_avg
+ pic_outfit + pic_color, data = evals)
summary(m_cls_profs)$adj.r.squared#0.1538113
m_cls_students <- lm(score ~ rank + ethnicity + gender + language + age + cls_perc_eval
+  cls_level + cls_profs + cls_credits + bty_avg
+ pic_outfit + pic_color, data = evals)
summary(m_cls_students)$adj.r.squared#0.1634262
m_rank <- lm(score ~ ethnicity + gender + language + age + cls_perc_eval
+ cls_students + cls_level + cls_profs + cls_credits + bty_avg
+ pic_outfit + pic_color, data = evals)
summary(m_rank)$adj.r.squared#0.1608651
library(ggplot2)
library(dplyr)
library(statsr)
load("movies.Rdata")
load("movies.Rdata")
load("./movies.Rdata")
load("~/GitHub/Duke_Statistics_R/Linear Regression/Project/movies.Rdata")
View(movies)
dim(movies)
load("~/GitHub/Duke_Statistics_R/Linear Regression/Project/movies.Rdata")
dim(movies)
class(movies)
str(movies)
library(ggplot2)
library(dplyr)
library(statsr)
movies_filtered <- select(movies, c(-(thtr_rel_year:dvd_rel_day), -top200_box, -(actor1:rt_url)))
View(movies_filtered)
str(movies_filtered)
ggplot(movies_filtered, aes(x = audience_score)) + geom_histogram() + xlab("Audience Score") + ylab("Count") + ggtitle("Histogram of Audience Score")
summary(movies_reg$audience_score)
summary(movies_filtered$audience_score)
ggplot(movies_filtered, aes(x = title_type, y = audience_score)) + geom_boxplot() + xlab("Title Type") + ylab("Audience Score") + ggtitle("Audience Score vs. Title Type")
movies_filtered <- filter(movies_filtered, genre !=Documentary)
movies_filtered <- filter(movies_filtered, genre != "Documentary")
dim(movies_filtered)
movies_filtered <- select(movies, c(-(thtr_rel_year:dvd_rel_day), -top200_box, -(actor1:rt_url)))
dim(movies_filtered)
movies_filtered <- filter(movies_filtered, genre == "Feature Film"" )
movies_filtered <- filter(movies_filtered, genre == "Feature Film")
dim(movies_filtered)
movies_filtered <- select(movies, c(-(thtr_rel_year:dvd_rel_day), -top200_box, -(actor1:rt_url)))
movies_filtered <- filter(movies_filtered, genre = "Feature Film")
movies_filtered <- filter(movies_filtered, title_type = "Feature Film")
movies_filtered <- filter(movies_filtered, title_type == "Feature Film")
dim(movies_filtered)
str(movies_filtered)
names(movies_filtered$director)
movies_filtered$director
by_dir <- group_by(movies_filtered, director)
View(by_dir)
by_dir <- group_by(movies_filtered, director, title)
summarize(by_dir, n=sum(title))
summarize(by_dir, n=n(title))
summarize(by_dir, n(title))
summarize(by_dir, n())
by_dir <- group_by(movies_filtered, director)
summarize(by_dir, n())
tmp <- summarize(by_dir, n())
hist(tmp)
plot(tmp)
class(tmp)
tmp
View(tmp)
movies_filtered <- select(movies, c(-(thtr_rel_year:dvd_rel_day), -top200_box, -(actor1:rt_url)))
movies_filtered <- filter(movies_filtered, title_type == "Feature Film")
movies_filtered <- complete.cases(movies_filtered)
movies_filtered <- select(movies, c(-(thtr_rel_year:dvd_rel_day), -top200_box, -(actor1:rt_url)))
movies_filtered <- filter(movies_filtered, title_type == "Feature Film")
movies_filtered <- complete.cases(movies_filtered)
movies_filtered <- select(movies, c(-(thtr_rel_year:dvd_rel_day), -top200_box, -(actor1:rt_url)))
movies_filtered <- filter(movies_filtered, title_type == "Feature Film")
movies_filtered <- na.omit(movies_filtered)
by_directors <- movies_filtered %>% group_by(director) %>% summarize(n())
by_directors <- movies_filtered %>% group_by(director) %>% summarize(n()) %>% arrange(desc(n()))
View(by_directors)
by_directors <- arrange(by_directors, desc(n))
by_directors <- arrange(by_directors, desc(n()))
class(by_directors)
str(by_directors)
by_directors <- by_directors[order(n()),]
names(by_directors)
colnames(by_directors) <- c("Director_Name", "Count_Movies")
by_directors <- by_directors[order(Count_Movies),]
by_directors <- by_directors[order(-by_directors$Count_Movies),]
plot(by_directors)
summary(by_directors$Count_Movies)
range(by_directors$Count_Movies)
by_dir_cnt <- by_directors %>% group_by(Count_Movies) %>% summarize(n())
View(by_dir_cnt)
by_dir_cnt <- by_directors %>% group_by(Count_Movies) %>% summarize(n()) %>% arrange(desc())
plot(by_dir_cnt)
by_dir_cnt <- by_dir_cnt[order(-by_dir_cnt$`n()`)]
by_dir_cnt <- by_directors %>% group_by(Count_Movies) %>% summarize(n())
by_dir_cnt <- by_dir_cnt[order(-by_dir_cnt$`n()`)]
View(by_dir_cnt)
by_dir_cnt <- by_directors %>% group_by(Count_Movies) %>% summarize(n())
View(by_dir_cnt)
ggplot(by_dir_cnt, aes(x=Count_Movies, y=n())) + geom_boxplot()
colnames(by_dir_cnt) <- c("Num_Movies", "Num_Directors")
ggplot(by_dir_cnt, aes(x=Num_Movies, y=Num_Directors)) + geom_boxplot()
ggplot(by_dir_cnt, aes(x=Num_Movies, y=Num_Directors)) + geom_bar()
barplot(by_dir_cnt)
ggplot(by_dir_cnt, aes(x=Num_Movies, y=Num_Directors)) + geom_bar(stat = identity())
str(by_dir_cnt)
ggplot(by_dir_cnt, aes(x=Num_Movies, y=Num_Directors)) + geom_bar(stat = "identity")
ggplot(by_dir_cnt, aes(x=Num_Movies, y=Num_Directors)) + geom_bar(stat = "identity", fill="lightgreen")
ggplot(by_dir_cnt, aes(x=Num_Movies, y=Num_Directors)) + geom_bar(stat = "identity", fill="lightgreen") + geom_text(aes(label=Num_Directors))
ggplot(by_dir_cnt, aes(x=Num_Movies, y=Num_Directors)) + geom_bar(stat = "identity", fill="lightgreen") + geom_text(aes(label=Num_Directors), vjust=10)
ggplot(by_dir_cnt, aes(x=Num_Movies, y=Num_Directors)) + geom_bar(stat = "identity", fill="lightgreen") + geom_text(aes(label=Num_Directors), vjust=-10)
ggplot(by_dir_cnt, aes(x=Num_Movies, y=Num_Directors)) + geom_bar(stat = "identity", fill="lightgreen") + geom_text(aes(label=Num_Directors), vjust=-1)
ggplot(by_dir_cnt, aes(x=Num_Movies, y=Num_Directors)) + geom_bar(stat = "identity", fill="lightgreen") + geom_text(aes(label=Num_Directors), vjust=-.5)
ggplot(by_dir_cnt, aes(x=Num_Movies, y=Num_Directors)) +
geom_bar(stat = "identity", fill="lightgreen") +
geom_text(aes(label=Num_Directors), vjust=-.5) +
ggtitle("How Many Movies Did Directors Produce?")
ggplot(by_dir_cnt, aes(x=Num_Movies, y=Num_Directors)) +
geom_bar(stat = "identity", fill="lightgreen") +
geom_text(aes(label=Num_Directors), vjust=-.5) +
ggtitle("How Many Movies Did Directors Produce?") +
labs(x="No. of Movies Produced", y="No. of Directors")
ggplot(by_dir_cnt, aes(x=Num_Movies, y=Num_Directors)) +
geom_bar(stat = "identity", fill="lightgreen") +
geom_text(aes(label=Num_Directors), vjust=-.5) +
ggtitle("How Many Movies Did Directors Produce?") +
labs(x="No. of Movies Produced", y="No. of Directors") +
geom_text("This is a test")
load("~/GitHub/Duke_Statistics_R/Inferential/project/gss.Rdata")
load("~/GitHub/Duke_Statistics_R/Linear Regression/Project/movies.Rdata")
library(ggplot2)
library(dplyr)
library(statsr)
movies_filtered <- select(movies, c(-(thtr_rel_year:dvd_rel_day), -top200_box, -(actor1:rt_url)))
movies_filtered <- filter(movies_filtered, title_type == "Feature Film")
movies_filtered <- na.omit(movies_filtered)
View(movies_filtered)
summarize_each(movies_filtered, n())
summarize_each(movies_filtered, fun(n()))
summarize_each(movies_filtered, n)
summarize_each(movies_filtered, n_distinct())
summarize_each(movies_filtered, n_distinct(title_type))
summarize_each(movies_filtered, n_distinct(genre))
summarize_each(movies_filtered, n_distinct(movies_filtered$genre))
n_distinct(movies_filtered$genre)
summarize_each(movies_filtered, n_distinct(movies_filtered$genre))
n_distinct(movies_filtered$genre)
table(movies_filtered)
unique(movies_filtered$title_type)
length(unique(movies_filtered$title_type))
class(movies_filtered)
str(movies_filtered)
length(unique(movies_filtered$audience_score))
length(unique(movies_filtered$audience_score))
length(unique(movies_filtered$genre))
movies$genre
length(unique(movies_filtered$audience_score))
length(unique(movies_filtered$audience_score))
length(unique(movies_filtered$genre))
summarize_each(movies_filtered, fun(length(unique())))
test <- lapply(movies_filtered, length(unique))
test <- lapply(movies_filtered, unique)
test
test <- lapply(movies_filtered, unique)
sapply(test, length)
unique1 <- lapply(movies_filtered, unique)
unique2 <- sapply(test, length)
class(unique2)
unique2
unique2 <- as.data.frame(unique2)
unique2
plot(unique2)
str(unique2)
cbind(Variables=rownames(unique2), unique2)
plot(unique2)
ggplot(unquie2, aes(x=Variables, y=unique2)) + geom_bar()
ggplot(unique2, aes(x=Variables, y=unique2)) + geom_bar()
names(unique2)
View(unique2)
unique3<-cbind(Variables=rownames(unique2), unique2)
View(unique3)
ggplot(unique3, aes(x=Variables, y=unique2)) + geom_bar()
ggplot(unique3, aes(x=Variables, y=unique2)) + geom_bar(stat = "identity")
table(unique3)
names(unique3)
table(unique2)
glimpse(unique3)
library(ggplot2)
library(dplyr)
library(statsr)
load("~/GitHub/Duke_Statistics_R/Linear Regression/Project/movies.Rdata")
movies_filtered <- select(movies, c(-(thtr_rel_year:dvd_rel_day), -top200_box, -(actor1:rt_url)))
movies_filtered <- filter(movies_filtered, title_type == "Feature Film")
movies_filtered <- na.omit(movies_filtered)
unique1 <- lapply(movies_filtered, unique)
unique2 <- sapply(test, length)
unique2 <- as.data.frame(unique2)
unique3<-cbind(Variables=rownames(unique2), unique2)
ggplot(unique3, aes(x=Variables, y=unique2)) + geom_bar(stat = "identity")
unique2 <- sapply(unique1, length)
unique2 <- as.data.frame(unique2)
unique3<-cbind(Variables=rownames(unique2), unique2)
ggplot(unique3, aes(x=Variables, y=unique2)) + geom_bar(stat = "identity")
View(unique3)
table(unique3)
summary(unique3)
unique3
rownames(unique3)<- NULL
unique3
kable(unique3)
library(knitr)
kable(unique3)
View(movies_filtered)
ddplyr(movies_filtered, c(title_type, genre, runtime), summarize, count = lenght(unique(value)))
library(plyr)
ddplyr(movies_filtered, c(title_type, genre, runtime), summarize, count = lenght(unique(value)))
library(plyr)
library(reshape)
ddplyr(movies_filtered, c(title_type, genre, runtime), summarize, count = lenght(unique(value)))
library(dplyr)
ddplyr(movies_filtered, c(title_type, genre, runtime), summarize, count = lenght(unique(value)))
ddply(movies_filtered, c(title_type, genre, runtime), summarize, count = lenght(unique(value)))
ddply(movies_filtered, c("title_type", "genre", "runtime"), summarize, count = lenght(unique(value)))
ddply(movies_filtered, c("title_type", "genre", "runtime"), summarize, count = length(unique(value)))
ddply(movies_filtered, c("title_type", "genre", "runtime"), summarize, count = length(unique()))
ddply(movies_filtered, c("title_type", "genre", "runtime"), summarize, count = length(unique(value)))
ddply(movies_filtered, c("title_type", "genre", "runtime"), summarize, count = length(unique(title_type)))
library(plyr)
count(movies_filtered, vars="title_type")
var_count <- names(movies_filtered)
count(movies_filtered, vars=var_count)
library(ggplot2)
library(dplyr)
library(statsr)
library(knitr)
### Load data
load("movies.Rdata")
load("~/GitHub/Duke_Statistics_R/Linear Regression/Project/movies.Rdata")
movies_filtered <- filter(movies_filtered, title_type == "Feature Film")
movies_filtered <- na.omit(movies_filtered)
movies_filtered <- select(movies, c(-(thtr_rel_year:dvd_rel_day), -top200_box, -(actor1:rt_url)))
movies_filtered <- filter(movies_filtered, title_type == "Feature Film")
movies_filtered <- na.omit(movies_filtered)
unique1 <- lapply(movies_filtered, unique)
unique2 <- sapply(unique1, length)
unique2 <- as.data.frame(unique2)
unique3<-cbind(Variables=rownames(unique2), unique2)
rownames(unique3) <- NULL
View(unique3)
View(movies_filtered)
View(unique2)
unique1 <- lapply(movies_filtered, unique)
unique2 <- sapply(unique1, length)
unique2 <- as.data.frame(unique2)
colnames(unique2) <- "Count_Distinct"
unique3<-cbind(Variables=rownames(unique2), unique2)
rownames(unique3) <- NULL
unique4 <- unique3 %>% mutate(Percent_Unique = Count_Distinct/)
length(movies_filtered)
numrows(movies_filtered)
unique4 <- unique3 %>% mutate(Percent_Unique = Count_Distinct/n(movies_filtered))
dim(movies_filtered)
unique4 <- unique3 %>% mutate(Percent_Unique = Count_Distinct/nrow(movies_filtered))
View(unique4)
unique4 <- unique3 %>% mutate(Percent_Unique = 1-Count_Distinct/nrow(movies_filtered))
unique4 <- unique3 %>% mutate(Percent_Unique = 1-Count_Distinct/nrow(movies_filtered))
librarby(scales)
library(scales)
unique4 <- unique3 %>% mutate(percent(Percent_Unique = 1-Count_Distinct/nrow(movies_filtered))
)
percent(unique4$Percent_Unique)
unique4$Percent_Unique <- percent(unique4$Percent_Unique)
View(unique4)
unique1 <- lapply(movies_filtered, unique)
unique2 <- sapply(unique1, length)
unique2 <- as.data.frame(unique2)
colnames(unique2) <- "Count_Distinct"
unique3<-cbind(Variables=rownames(unique2), unique2)
rownames(unique3) <- NULL
unique4 <- unique3 %>% mutate(Percent_Unique = 1-Count_Distinct/nrow(movies_filtered))
unique4$Percent_Unique <- percent(unique4$Percent_Unique)
kable(unique3)
kable(unique4)
ggplot(unique4, aes(x=Variables, y=Percent_Unique)) + geom_bar(stat = "identity")
library(ggplot2)
library(dplyr)
library(statsr)
library(knitr)
### Load data
load("movies.Rdata")
load("~/GitHub/Duke_Statistics_R/Linear Regression/Project/movies.Rdata")
movies_filtered <- select(movies, c(-(thtr_rel_year:dvd_rel_day), -top200_box, -(actor1:rt_url)))
movies_filtered <- filter(movies_filtered, title_type == "Feature Film")
movies_filtered <- na.omit(movies_filtered)
unique1 <- lapply(movies_filtered, unique)
unique2 <- sapply(unique1, length)
unique2 <- as.data.frame(unique2)
colnames(unique2) <- "Count_Distinct"
unique3<-cbind(Variables=rownames(unique2), unique2)
rownames(unique3) <- NULL
unique4 <- unique3 %>% mutate(Percent_Unique = 1-Count_Distinct/nrow(movies_filtered))
unique4$Percent_Unique <- percent(unique4$Percent_Unique)
kable(unique4)
unique4$Percent_Unique <- percent(unique4$Percent_Unique)
library(scales)
unique4$Percent_Unique <- percent(unique4$Percent_Unique)
kable(unique4)
kable(unique4, results="asis"")
kable(unique4, results="asis")
kable(unique4, format="html")
library(formattable)
View(unique4)
format_table(unique4,list(Variables=formatter("span"="colr:red")))
format_table(unique4,list(Variables=formatter("span", style="color:red")))
format_table(unique4,list(Variables=formatter("span", style="color:blue")), align = c)
format_table(unique4,list(Variables=formatter("span", style="color:blue")), align = "c")
kable(unique4)
load("~/GitHub/Duke_Statistics_R/Linear Regression/Project/movies.Rdata")
movies_filtered <- select(movies, c(-(thtr_rel_year:dvd_rel_day), -top200_box, -imdb_rating, -imdb_num_votes, -(actor1:rt_url)))
movies_filtered <- filter(movies_filtered, title_type == "Feature Film")
movieRating <- c("G", "PG", "PG-13")
movies_filtered <- filter(movies_filtered, mpaa_rating %in% movieRating)
movies_filtered <- na.omit(movies_filtered)
ibrary(ggplot2)
library(dplyr)
library(statsr)
library(knitr)
library(scales)
library(formattabl
library(formattable)
library(formattable)
movies_filtered <- select(movies, c(-(thtr_rel_year:dvd_rel_day), -top200_box, -imdb_rating, -imdb_num_votes, -(actor1:rt_url)))
movies_filtered <- filter(movies_filtered, title_type == "Feature Film")
movieRating <- c("G", "PG", "PG-13")
movies_filtered <- filter(movies_filtered, mpaa_rating %in% movieRating)
movies_filtered <- na.omit(movies_filtered)
movies_filtered <- select(movies_filtered, c(-(title:title_type), -critics_rating, -audience_rating,-studio, -director))
dim(movies_filtered)
str(movies_filtered)
unique1 <- lapply(movies_filtered, unique)
unique2 <- as.data.frame(unique2)
colnames(unique2) <- "Count_Distinct"
unique3<-cbind(Variables=rownames(unique2), unique2)
rownames(unique3) <- NULL
unique4 <- unique3 %>% mutate(Percent_Unique = 1-Count_Distinct/nrow(movies_filtered))
unique4$Percent_Unique <- percent(unique4$Percent_Unique)
format_table(unique4,list(Variables=formatter("span", style="color:blue")), align = "c")
unique4 <- unique3 %>% mutate(Percent_Unique = 1-Count_Distinct/nrow(movies_filtered))
unique3<-cbind(Variables=rownames(unique2), unique2)
unique1 <- lapply(movies_filtered, unique)
unique2 <- sapply(unique1, length)
unique2 <- as.data.frame(unique2)
colnames(unique2) <- "Count_Distinct"
unique3<-cbind(Variables=rownames(unique2), unique2)
rownames(unique3) <- NULL
unique4 <- unique3 %>% mutate(Percent_Unique = 1-Count_Distinct/nrow(movies_filtered))
unique4$Percent_Unique <- percent(unique4$Percent_Unique)
format_table(unique4,list(Variables=formatter("span", style="color:blue")), align = "c")
kable(unique4)
ggplot(unique4, aes(x=Variables, y=Percent_Unique)) + geom_bar(stat = "identity")
load("~/GitHub/Duke_Statistics_R/Linear Regression/Project/movies.Rdata")
movies_filtered <- select(movies, c(-(thtr_rel_year:dvd_rel_day), -top200_box, -imdb_rating, -imdb_num_votes, -(actor1:rt_url)))
library(ggplot2)
library(dplyr)
library(statsr)
library(knitr)
library(scales)
library(formattable)
movies_filtered <- select(movies, c(-(thtr_rel_year:dvd_rel_day), -top200_box, -imdb_rating, -imdb_num_votes, -(actor1:rt_url)))
movies_filtered <- filter(movies_filtered, title_type == "Feature Film")
movieRating <- c("G", "PG", "PG-13")
movies_filtered <- filter(movies_filtered, mpaa_rating %in% movieRating)
movies_filtered <- na.omit(movies_filtered)
movies_filtered <- select(movies_filtered, c(-(title:title_type), -critics_rating, -audience_rating,-studio, -director))
View(movies_filtered)
tmpMLR <- lm(audience_score ~., data=movies_filtered)
summary(tmpMLR)
VARIABLE=c("",gsub("[-^0-9]", "", names(unlist(tmpMLR$xlevels))))
MODALITY=c("",as.character(unlist(tmpMLR$xlevels)))
names=data.frame(VARIABLE,MODALITY,NOMVAR=c(
+ "(Intercept)",paste(VARIABLE,MODALITY,sep="")[-1]))
names=data.frame(VARIABLE,MODALITY,NOMVAR=c("(Intercept)",paste(VARIABLE,MODALITY,sep="")[-1]))
regression=data.frame(NOMVAR=names(coefficients(tmpMLR)), COEF=as.numeric(coefficients(tmpMLR)))
merge(names,regression,all.x=TRUE)
merge(names,regression)
library(xtable)
htlmtable <- xtable(merge(names,regression))
print(htlmtable,type="html")
outlierTest(tmpMLR)
library(car)
outlierTest(tmpMLR)
qqPlot(tmpMLR)
library(MASS)
sresid <- studres(tmp_MLR)
sresid <- studres(tmpMLR)
hist(sresid, freq=FALSE, main="Distribution of Studentized Residuals")
xfit<-seq(min(sresid),max(sresid),length=40)
yfit<-dnorm(xfit)
lines(xfit, yfit)
ncvTest(tmpMLR)
spreadLevelPlot(tmpMLR)
vif(tmpMLR) # variance inflation factors
sqrt(vif(tmpMLR)) > 2 # problem?
crPlots(tmpMLR)
ceresPlots(tmpMLR)
load("~/GitHub/Duke_Statistics_R/Linear Regression/Project/movies.Rdata")
movies_filtered <- select(movies, c(-(thtr_rel_year:dvd_rel_day), -top200_box, -imdb_rating, -imdb_num_votes, -(actor1:rt_url)))
library(ggplot2)
library(dplyr)
library(statsr)
library(knitr)
library(scales)
library(formattable)
movies_filtered <- select(movies, c(-(thtr_rel_year:dvd_rel_day), -top200_box, -imdb_rating, -imdb_num_votes, -(actor1:rt_url)))
movies_filtered <- filter(movies_filtered, title_type == "Feature Film")
movieRating <- c("G", "PG", "PG-13")
movies_filtered <- filter(movies_filtered, mpaa_rating %in% movieRating)
movies_filtered <- na.omit(movies_filtered)
movies_filtered <- select(movies_filtered, c(-(title:title_type), -critics_rating, -audience_rating,-studio, -director))
dim(movies_filtered)
str(movies_filtered)
summary(movies_filtered)
table(movies_filtered$best_actor_win)
table(movies_filtered$best_actor_win, movies_filtered$best_actress_win)
View(movies_filtered)
movies_filtered2 <- select(movies_filtered, genre:audience_score)
tmpMLR2 <- lm(audience_score ~., data=movies_filtered2)
summary(tmpMLR2)
tmpMLR <- lm(audience_score ~., data=movies_filtered)
tmpMLR <- lm(audience_score ~., data=movies_filtered2)
summary(tmpMLR)
summary(movies_filtered$audience_score)
ggplot(movies_filtered, aes(x = audience_score)) + geom_histogram() + xlab("Audience Score") + ylab("Count") + ggtitle("Histogram of Audience Score")
summary(movies_filtered$audience_score)
sresid <- studres(tmpMLR)
library(car)
library(MASS)
qqPlot(tmpMLR)
ggplot(movies_filtered, aes(x = title_type, y = audience_score)) + geom_boxplot() + xlab("Title Type") + ylab("Audience Score") + ggtitle("Audience Score vs. Title Type")
movies_filtered %>% group_by(title_type) %>% summarise(median_score = median(audience_score), iqr_score = IQR(audience_score))
unique1 <- lapply(movies_filtered, unique)
unique2 <- sapply(unique1, length)
unique2 <- as.data.frame(unique2)
colnames(unique2) <- "Count_Distinct"
unique3<-cbind(Variables=rownames(unique2), unique2)
rownames(unique3) <- NULL
unique4 <- unique3 %>% mutate(Percent_Unique = 1-Count_Distinct/nrow(movies_filtered))
unique4$Percent_Unique <- percent(unique4$Percent_Unique)
format_table(unique4,list(Variables=formatter("span", style="color:blue")), align = "c")
movieMLR <- lm(audience_score ~., data=movies_filtered)
cor(movies$runtime, movies$critics_score)
str(movies_filtered)
plot(movies_filtered$runtime, movies_filtered$critics_score)
plot(movies_filtered$critics_score, movies_filtered$runtime)
cor(movies_filtered$critics_score, movies_filtered$runtime)
movieMLR <- lm(audience_score ~., data=movies_filtered)
summary(movieMLR)
pairs(movies_filtered)
library(psych)
pairs.panels(movies_filtered)
