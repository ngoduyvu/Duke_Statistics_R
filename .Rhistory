ylim(0, input$n_sim * 0.35) +
ggtitle(paste0("Sampling distribution of mean ",
input$selected_var, " (n = ", input$n_samp, ")")) +
xlab(paste("mean", input$selected_var)) +
theme(plot.title = element_text(face = "bold", size = 16))
})
# mean of sampling distribution
output$sampling_mean <- renderText({
paste0("mean of sampling distribution = ", round(mean(sampling_dist()$x_bar), 2))
})
# mean of sampling distribution
output$sampling_se <- renderText({
paste0("SE of sampling distribution = ", round(sd(sampling_dist()$x_bar), 2))
})
},
options = list(height = 500)
)
View(ames)
ames %>% sample_n(size = 50) %>% summarise(price = mean(price))
sample_means50 <- ames %>%
rep_sample_n(size = 50, reps = 5000, replace = TRUE) %>%
summarise(price = mean(price))
ggplot(data = sample_means50, aes(x = price)) + geom_histogram(binwidth = 20)
str(sample_means50)
summary(sample_means50)
sample_means150 <- ames %>%
rep_sample_n(size = 150, reps = 5000, replace = TRUE) %>%
summarise(price = mean(price))
ggplot(data = sample_means150, aes(x = price)) + geom_histogram(binwidth = 20)
summary(sample_means150)
ames %>% sample_n(size = 15) %>% summarise(price = mean(price))#Answer:  183192.2
sample_means15 <- ames %>%
rep_sample_n(size = 15, reps = 2000, replace = TRUE) %>%
summarise(price = mean(price))
ggplot(data = sample_means15, aes(x = price)) + geom_histogram(binwidth = 20)
ggplot(data = sample_means15, aes(x = price)) + geom_histogram(binwidth = 40)
ggplot(data = sample_means15, aes(x = price)) + geom_histogram(binwidth = 100)
ggplot(data = sample_means15, aes(x = price)) + geom_histogram(binwidth = 200)
sample_means15 <- ames %>%
rep_sample_n(size = 15, reps = 2000, replace = TRUE) %>%
summarise(price = mean(price))
ggplot(data = sample_means15, aes(x = price)) + geom_histogram(binwidth = 200)
summary(sample_means15)
sample_means150 <- ames %>%
rep_sample_n(size = 150, reps = 2000, replace = TRUE) %>%
summarise(price = mean(price))
ggplot(data = sample_means150, aes(x = price)) + geom_histogram(binwidth = 200)
summary(sample_means150)
library(statsr)
library(dplyr)
library(ggplot2)
data(nc)
summary(nc)
View(nc)
boxplot(nc)
qplot(habit, weight, data=nc, geom=c("boxplot") )
qplot(habit, weight, data=nc, geom=c("boxplot")) + geom_point(alpha=0.4)
ggplot(nc, aes(x=habit, y=weight))
ggplot(nc, aes(x=habit, y=weight)) + geom_boxplot()
library(dplyr)
nc_plot <- nc %>% filter(!is.na(habit))
ggplot(nc_plot, aes(x=habit, y=weight)) + geom_boxplot()
library(yarrr)
pirateplot(formula = weight ~ habit, data=nc_plot)
pirateplot(formula = weight ~ habit, data=nc_plot, theme.o = 2)
pirateplot(formula = weight ~ habit, data=nc_plot, theme.o = 2, main="Pirate Plot")
nc %>% group_by(habit) %>% summarise(mean_weight = mean(weight))
inference(y = weight, x = habit, data = nc, statistic = "mean", type = "ci", method = "theoretical")
inference(y = weeks, data = nc, statistic = "mean", type = "ci", method = "theoretical", conf_level = .95)
inference(y = weeks, data = nc, statistic = "mean", type = "ci", method = "theoretical", conf_level = .90)
inference(y = weight, x=mature, data = nc, statistic = "mean", type = "ci", method = "theoretical", conf_level = .95)
cnt_young <- nc %>% filter(mature=="younger")
View(cnt_young)
cnt_young <- nc %>% filter(mature=="younger mom")
cnt_mature nc %>% filter(mature=="mature mom")
cnt_mature <- nc %>% filter(mature=="mature mom")
countMature <- nc %>% group_by(mature)
countMature
countMature <- nc %>% summarise(mature)
table(nc)
nc %>% group_by(nc, mature)
nc %>% group_by(mature)
nc %>% group_by(mature, n())
nc %>% summarise(mature, Count=sum(mature))
nc %>% summarise(mature, Count=length(mature))
nc %>% summarise(mature, Count=n())
inference(y = weight, x=whitemom, data = nc, statistic = "mean", type = "ci", method = "theoretical", conf_level = .95)
library(statsr)
library(dplyr)
library(ggplot2)
data(nc)
nc %>% group_by(habit) %>% summarise(mean_weight = mean(weight))
# type your code for Question 7 here, and Knit
cnt_young <- nc %>% filter(mature=="younger mom")
cnt_mature <- nc %>% filter(mature=="mature mom")
length(cnt_young); length(cnt_mature)
View(cnt_young)
View(cnt_mature)
inference(y = weeks, data = nc, statistic = "mean", type = "ci", method = "theoretical", conf_level = .99)
library(statsr)
library(dplyr)
library(ggplot2)
data(atheism)
us12 <- atheism %>% filter(nationality == "United States" , atheism$year == "2012")
View(us12)
table(us12)
class(us12)
table(us12)
summarize(us12, atheists=n(response))
us12 %>% group_by(response)
us12 %>% group_by(response) %>% summarise(belief = n())
belief_prop <- us12 %>% group_by(response) %>% summarise(belief = n())
View(belief_prop)
belief_prop_perc <- belief_prop[1,2]/belief_prop[2,2]
belief_prop_perc
format(belief_prop_perc, "percent")
library(scales)
percent(belief_prop_perc)
percent(belief_prop_perc[1,1])
.0634-.0364
(.0634-.0364)/2
View(atheism)
china05 <- atheism %>% filter(nationality == "China" , atheism$year == "2005")
china08 <- atheism %>% filter(nationality == "China" , atheism$year == "2008")
china12 <- atheism %>% filter(nationality == "China" , atheism$year == "2012")
japan12 <- atheism %>% filter(nationality == "Japan" , atheism$year == "2012")
inference(y = response, data = china12, statistic = "proportion", type = "ci", method = "theoretical", success = "atheist")
d <- data.frame(p <- seq(0, 1, 0.01))
n <- 1000
d <- d %>% mutate(me = 1.96*sqrt(p*(1 - p)/n))
ggplot(d, aes(x = p, y = me)) + geom_line()
usData <- atheism %>% filter(nationality == "United States", atheism$year == c("2005", "2012"))
View(usData)
usData <- usData %>% group_by(year) %>% summarize(belief=n())
View(usData)
usData <- atheism %>% filter(nationality == "United States", atheism$year == c("2005", "2012"))
usData <- usData %>% group_by(year, belief, ) %>% summarize(belief=n())
usData <- usData %>% group_by(year, response) %>% summarize(belief=n())
View(usData)
table(usData)
belief_prop <- usData %>% group_by(response) %>% summarise(belief = n())
View(belief_prop)
usData <- atheism %>% filter(nationality == "United States", atheism$year == c("2005", "2012"))
usData <- usData %>% group_by(year, response) %>% summarize(belief=n())
View(usData)
usData[1,3]/usData[2,3]
percent(usData[1,3]/usData[2,3])#2005 % atheist
percent(usData[3,3]/usData[4,3])#2012 % atheist
(usData[1,3]/usData[2,3])#2005 % atheist
as.numeric(usData[1,3]/usData[2,3])#2005 % atheist
percent(as.numeric(usData[1,3]/usData[2,3])#2005 % atheist
percent(as.numeric(usData[1,3]/usData[2,3]))#2005 % atheist
2005<- usData[1,3]/usData[2,3])#2005 % atheist
2005<- usData[1,3]/usData[2,3]#2005 % atheist
2012 <- usData[3,3]/usData[4,3]#2012 % atheist
usData[1,3]/usData[2,3]#2005 % atheist
usData[3,3]/usData[4,3]#2012 % atheist
class(2005)
percent(2005)
spainData <- atheism %>% filter(nationality == "Spain", atheism$year == c("2005", "2012"))
inference(y = response, data = spainData, statistic = "proportion", type = "ci", method = "theoretical", success = "atheist")
inference(y = response, data = spainData, statistic = "proportion", type = "ci", method = "theoretical", success = "year")
spainData2005 <- atheism %>% filter(nationality == "Spain", atheism$year == "2005")
inference(y = response, data = spainData, statistic = "proportion", type = "ci", method = "theoretical", success = "atheist")
spainData2012 <- atheism %>% filter(nationality == "Spain", atheism$year == "2012")
spainData <- atheism %>% filter(nationality == "Spain", atheism$year == "2005")
inference(y = response, data = spainData, statistic = "proportion", type = "ci", method = "theoretical", success = "atheist")
spainData <- atheism %>% filter(nationality == "Spain", atheism$year == "2012")
inference(y = response, data = spainData, statistic = "proportion", type = "ci", method = "theoretical", success = "atheist")
us12 <- atheism %>% filter(nationality == "United States" , atheism$year == "2012")
sum(us12$response == "atheist")/length(us12$response)
View(us12)
belief_prop <- us12 %>% group_by(response) %>% summarise(belief = n())
percent(belief_prop_perc[1,1]) #ans:  5.25%
spain_prop = sum(spain$response == "atheist"")  / length(spain$response)
spain_prop = sum(spainData$response == "atheist"")  / length(spain$response))
spain_prop = sum(spainData$response == "atheist"")  / length(spain$response)
spain_prop = sum(spainData$response == "atheist")  / length(spain$response)
spain_prop = sum(spainData$response == "atheist")  / length(spainData$response)
spain_prop
inference(spainData$response, spainData$year, est = "proportion", type = "ci", method = "theoretical", success = "atheist")
inference(spainData$response, spainData$year, est = "spain_prop", type = "ci", method = "theoretical", success = "atheist")
inference(spainData$response, spainData$year, est = "proportion", type = "ci", method = "theoretical", success = "atheist")
spain_prop = sum(spainData$response == "atheist")  / length(spainData$response)
inference(spainData$response, spainData$year, est = "spain_prop", type = "ci", method = "theoretical", success = "atheist")
proportion = sum(spainData$response == "atheist")  / length(spainData$response)
inference(spainData$response, spainData$year, est = "proportion", type = "ci", method = "theoretical", success = "atheist")
inference(us$response, us$year, est = "proportion", type = "ci", method = "theoretical", success = "atheist")
us = subset(atheism, atheism$nationality == "United States")
proportion = sum(us$response == 'atheist')  / length(us$response)
inference(us$response, us$year, est = "proportion", type = "ci", method = "theoretical", success = "atheist")
inference(us$response, us$year, type = "ci", method = "theoretical", success = "atheist")
inference(us$response, us$year, est = "proportion", type = "ci", method = "theoretical", success = "atheist")
inference(us$response, as.factor(us$year), est = "proportion", type = "ci", method = "theoretical", success = "atheist")
spain = subset(atheism, atheism$nationality == "Spain")
inference(spain$response, spain$year, est = "proportion", type = "ht", method = "theoretical", success = "atheist", alternative = "twosided")
inference(y=spain$response, x=spain$year, est = "proportion", type = "ht", method = "theoretical", success = "atheist", alternative = "twosided")
table(us12$response)
inference(spainData$response, spainData$year, est = "proportion", type = "ci", method = "theoretical", success = "atheist")
inferencespainData$response, spainData$year, data = spainData, statistic = "proportion", type = "ci", method = "theoretical", success = "atheist"
inference(spainData$response, spainData$year, data = spainData, statistic = "proportion", type = "ci", method = "theoretical", success = "atheist")
table(spainData$response)
proportion = sum(spainData$response == "atheist")  / length(spainData$response)
proportion
percent(proportion)
inference(spainData$response, spainData$year, data = spainData, statistic = "proportion", type = "ci", method = "theoretical", success = "atheist")
india = subset(atheism, atheism$nationality == "India" & atheism$year == "2012")
inference(india$response, est = "proportion", type = "ci", method = "theoretical", success = "atheist")
inference(y=india$response, data=india, statistic = "proportion", type = "ci", method = "theoretical", success = "atheist")
inference(y=china12$response, data=china12, statistic = "proportion", type = "ci", method = "theoretical", success = "atheist")
japan12 <- atheism %>% filter(nationality == "Japan" , atheism$year == "2012")
inference(y=japan12$response, data=japan12, statistic = "proportion", type = "ci", method = "theoretical", success = "atheist")
spainData <- atheism %>% filter(nationality == "Spain")
table(spainData$response)
proportion = sum(spainData$response == "atheist")  / length(spainData$response)
percent(proportion)
inference(y=spainData$response, spainData$year, data = spainData, statistic = "proportion", type = "ci", method = "theoretical", success = "atheist")
inference(y=spainData$response, as.factor(spainData$year), data = spainData, statistic = "proportion", type = "ci", method = "theoretical", success = "atheist")
usData <- atheism %>% filter(nationality == "United States")
table(usData$response)
proportion = sum(usData$response == "atheist")  / length(usData$response)
percent(proportion)
inference(y=usData$response, as.factor(usData$year), data = usData, statistic = "proportion", type = "ci", method = "theoretical", success = "atheist")
plot(me ~ p, type='l')
library(statsr)
library(dplyr)
library(ggplot2)
data(atheism)
us12 <- atheism %>% filter(nationality == "United States" , atheism$year == "2012")
library(scales)
belief_prop <- us12 %>% group_by(response) %>% summarise(belief = n())
View(belief_prop)
table(belief_prop$response)
table(us12$response)
belief_pct <- us12 %>% group_by(response) %>% summarise(belief = n())
View(belief_pct)
tmp <- table(us12$response)
class(tmp)
tmp
tmp[2,1]
tmp[[1,2]]
tmp[1]
tmp[1]/tmp[2]
percent(tmp[1]/tmp[2])
sum(us12$response == "atheist")/length(us12$response)
summary(us12)
50/952
str(us12)
length(us12$response)
tmp <- table(us12$response)
tmp
952+50
length(us12$response)
length(us12$response=="atheist")
tmpq <- us12(subset(us12, response="atheist"))
tmpq <- subset(us12, response="atheist")
View(tmpq)
tmpq <- subset(us12, response=="atheist")
tmpq <- subset(us12, response=="non-atheist")
sum(us12$response == "atheist")/length(us12$response)
percent(tmp[1]/tmp[2]) #Gives 5.25%
d <- data.frame(p <- seq(0, 1, 0.01))
n <- 1000
d <- d %>% mutate(me = 1.96*sqrt(p*(1 - p)/n))
ggplot(d, aes(x = p, y = me)) + geom_line()
load("gss.Rdata")
getwd()
load("./Inferential/project/gss.Rdata")
data <- gss[,c("sibs","degree")]
summary(data)
library(ggplot2)
library(dplyr)
library(statsr)
load("gss.Rdata")
load("./Inferential/project/gss.Rdata")
View(gss)
names(gss)
varsOfInterest <- c("year", "age", "sex", "race", "degree", "incom16", "relig", "attend", "class", "natspac")
data_mod <- select(gss, one_of(varsOfInterest))
View(data_mod)
countNAs <- apply(modData, 2, function(x) sum(is.na(x)))
modData <- select(gss, one_of(varsOfInterest))
countNAs <- apply(modData, 2, function(x) sum(is.na(x)))
countNAs_df <- as.data.frame(countNAs)#change to data frame
countNAs_df$cat <- row.names(countNAs_df)#copy row names to its own column (variable)
options(scipen=999)#prevents scientific notation
countNAs_df$percentNA <- format(countNAs_df$countNAs/nrow(modData), digits = 2)
countNAs_df$percentNA <- as.numeric(countNAs_df$percentNA)
plot5 <- ggplot(countNAs_df, aes(x = reorder(cat, -countNAs), y = countNAs),
ylab("NA Count"), xlab("Variable Name")) +
geom_bar(stat = "identity") +
theme(axis.ticks = element_blank(), axis.text.y = element_blank()) +
scale_y_continuous(labels = comma) +
xlab("Variable Names") + ylab("NA Count") + ggtitle("Count of NAs in Data") + coord_flip()
plot5
View(countNAs_df)
varsOfInterest <- c("year", "age", "sex", "race", "degree", "incom16", "relig", "attend", "class", "natspac")
modData <- select(gss, one_of(varsOfInterest))
countNAs <- apply(modData, 2, function(x) sum(is.na(x)))
countNAs_df <- as.data.frame(countNAs)#change to data frame
countNAs_df$cat <- row.names(countNAs_df)#copy row names to its own column (variable)
options(scipen=999)#prevents scientific notation
countNAs_df$percentNA <- format(countNAs_df$countNAs/nrow(modData), digits = 2)
modData <- select(gss, one_of(varsOfInterest))
countNAs <- apply(modData, 2, function(x) sum(is.na(x)))
countNAs_df <- as.data.frame(countNAs)#change to data frame
options(scipen=999)#prevents scientific notation
countNAs_df$percentNA <- format(countNAs_df$countNAs/nrow(modData), digits = 2)
countNAs_df$percentNA <- as.numeric(countNAs_df$percentNA)
plot5 <- ggplot(countNAs_df, aes(x = reorder(cat, -countNAs), y = countNAs),
ylab("NA Count"), xlab("Variable Name")) +
geom_bar(stat = "identity") +
theme(axis.ticks = element_blank(), axis.text.y = element_blank()) +
scale_y_continuous(labels = comma) +
xlab("Variable Names") + ylab("NA Count") + ggtitle("Count of NAs in Data") + coord_flip()
plot5 <- ggplot(countNAs_df, aes(x = reorder(cat, -countNAs), y = countNAs),
ylab("NA Count"), xlab("Variable Name")) +
geom_bar(stat = "identity") +
theme(axis.ticks = element_blank(), axis.text.y = element_blank()) +
#scale_y_continuous(labels = comma) +
xlab("Variable Names") + ylab("NA Count") + ggtitle("Count of NAs in Data") + coord_flip()
plot5
View(countNAs_df)
table(countNAs_df)
countNAs <- apply(modData, 2, function(x) sum(is.na(x)))
countNAs
modData2 <- modData %>% select("attend", "natspace")
modData2 <- modData %>% select("attend", "natspac")
View(modData)
modData2 <- modData %>% select("relig", "natspac")
modData2 <- select(modData, "relig", "natspac")
library(ggplot2)
library(dplyr)
library(statsr)
load("./Inferential/project/gss.Rdata")
varsOfInterest <- c("year", "age", "sex", "race", "degree", "incom16", "relig", "attend", "class", "natspac")
modData <- select(gss, one_of(varsOfInterest))
countNAs <- apply(modData, 2, function(x) sum(is.na(x)))
countNAs#25834
modData2 <- select(modData, "relig", "natspac")
class(gss)
class(modData)
modData2 <- select(modData, relig, natspac)
modData2 <- complete.cases(modData2)
modData2 <- modData2[complete.cases(modData2,]
modData2 <- modData2[complete.cases(modData2, )]
modData <- select(gss, one_of(varsOfInterest))
modData2 <- select(modData, relig, natspac)
modData2 <- modData2[complete.cases(modData2, )]
modData2 <- modData2 %>% filter(relig != NA, natspac != NA)
View(modData2)
modData2 <- modData2 %>% filter(relig != "NA", natspac != "NA")
modData2 <- select(modData, relig, natspac)
modData2 <- modData2 %>% filter(relig != "NA", natspac != "NA")
View(modData2)
ggplot(modData2, aes(x=relig)) +
geom_histogram(binwidth=1, colour="black", fill="white") +
xlab("Religion") +
ggtitle("Distribution of Religion")
ggplot(modData2, aes(x=relig), stat=count) +
geom_histogram(binwidth=1, colour="black", fill="white") +
xlab("Religion") +
ggtitle("Distribution of Religion")
table(modData2$relig, modData2$natspac)
modData2 <- select(modData, relig, attend, natspac)
modData2 <- modData2 %>% filter(relig != "NA", natspac != "NA")
table(modData2$attend, modData2$natspac)
modData2 <- select(modData, attend, natspac)
modData2 <- modData2 %>% filter(attend != "NA", natspac != "NA")
table(modData2$attend, modData2$natspac)
distinct(modData2)
distinct(modData2$attend)
levels(modData2$attend)
n_distinct(modData$attend)
?revalue
library(plyr)#Used for the revalue function
library(plyr)#Used for the revalue function
library(dplyr)
revalue(modData2$attend, c("Never" = "Rarely", "Lt Once A Year" = "Rarely", "Once A Year" = "Rarely",
"Sevrl Times A Yr" = "Rarely"))
n_distinct(modData$attend)
levels(modData2$attend)
revalue(modData2, c("Never" = "Rarely", "Lt Once A Year" = "Rarely", "Once A Year" = "Rarely",
"Sevrl Times A Yr" = "Rarely"))
modData3 <- revalue(modData2$attend, c("Never" = "Rarely", "Lt Once A Year" = "Rarely", "Once A Year" = "Rarely",
"Sevrl Times A Yr" = "Rarely"))
modData3
revalue(modData2$attend, c(Never = "Rarely", Lt Once A Year = "Rarely", Once A Year = "Rarely",
revalue(modData2$attend, c(Never = "Rarely", Lt Once A Year = "Rarely", Once A Year = "Rarely",
Sevrl Times A Yr = "Rarely"))
x <- c("a", "b", "c")
revalue(x, c("a" = "A", "c" = "C"))
x
x1 <- revalue(x, c("a" = "A", "c" = "C"))
x <- c("a", "b", "c")
x1 <- revalue(x, c("a" = "A", "c" = "C"))
x1
modData2 <- revalue(modData2$attend, c(Never = "Rarely", Lt Once A Year = "Rarely", Once A Year = "Rarely",
modData2 <- revalue(modData2$attend, c("Never" = "Rarely", "Lt Once A Year" = "Rarely", "Once A Year" = "Rarely",
"Sevrl Times A Yr" = "Rarely"))
modData2 <- select(modData, attend, natspac)
modData2 <- modData2 %>% filter(attend != "NA", natspac != "NA")
table(modData2$attend, modData2$natspac)
n_distinct(modData$attend)
levels(modData2$attend)
modData2 <- revalue(modData2$attend, c("Lt Once A Year" = "Rarely"))
modData2 <- select(modData, attend, natspac)
modData2 <- modData2 %>% filter(attend != "NA", natspac != "NA")
table(modData2$attend, modData2$natspac)
n_distinct(modData$attend)
levels(modData2$attend)
modData3 <- revalue(modData2$attend, c("Lt Once A Year" = "Rarely"))
modData3
modData2 <- select(modData, attend, natspac)
modData2 <- modData2 %>% filter(attend != "NA", natspac != "NA")
table(modData2$attend, modData2$natspac)
n_distinct(modData$attend)
levels(modData2$attend)
modData3$attend <- revalue(modData2$attend, c("Lt Once A Year" = "Rarely"))
modData2[modData2$attend=="Lt Once A Year"] <- "Rarely"
View(modData2)
levels(modData2$attend)
oldvalues <- c("Lt Once A Year", "Once A Year", "Sevrl Times A Yr", "Never")
oldvalues <- c("Lt Once A Year", "Once A Year", "Sevrl Times A Yr", "Never")
newvalues <- factor("Rarely")
modData2$attend <- newvalues[match(modData2$attend, oldvalues)]
modData2 <- select(modData, attend, natspac)
modData2 <- modData2 %>% filter(attend != "NA", natspac != "NA")
table(modData2$attend, modData2$natspac)
n_distinct(modData$attend)
levels(modData2$attend)
str(modData2)
x <- factor(c("alpha","beta","gamma","alpha","beta"))
class(x)
levels(modData2$attend)[levels(modData2$attend)=="Once A Year"] <- "Rarely"
levels(modData2$attend)
levels(modData2$attend)
levels(modData2$attend)[levels(modData2$attend)==c("Lt Once A Year", "Sevrl Times A Yr") ] <- "Rarely"
levels(modData2$attend)[levels(modData2$attend)=="Lt Once A Year"] <- "Rarely"
levels(modData2$attend)
levels(modData2$attend)[levels(modData2$attend)=="Once A Month"] <- "Rarely"
levels(modData2$attend)
levels(modData2$attend)[levels(modData2$attend)=="Never"] <- "Rarely"
n_distinct(modData$attend)
levels(modData2$attend)
levels(modData2$attend)[levels(modData2$attend)=="2-3X A Month"] <- "Often"
levels(modData2$attend)[levels(modData2$attend)=="Nrly Every Week"] <- "Often"
levels(modData2$attend)[levels(modData2$attend)=="Every Week"] <- "Often"
levels(modData2$attend)[levels(modData2$attend)=="More Thn Once Wk"] <- "Often"
levels(modData2$attend)
modData2 <- select(modData, attend, natspac)
modData2 <- modData2 %>% filter(attend != "NA", natspac != "NA")
levels(modData2$attend)
modData2$attend <- revalue(modData2$attend, c("Never"="Rarely", "Lt Once A Year"="Rarely", "Once A Year"="Rarely"))
levels(modData2$attend)
modData2 <- select(modData, attend, natspac)
modData2 <- modData2 %>% filter(attend != "NA", natspac != "NA")
levels(modData2$attend)
modData2$attend <- revalue(modData2$attend, c("Never"="Rarely", "Lt Once A Year"="Rarely", "Once A Year"="Rarely", "Sevrl Times A Yr"=Rarely))
modData2$attend <- revalue(modData2$attend, c("Never"="Rarely", "Lt Once A Year"="Rarely", "Once A Year"="Rarely", "Sevrl Times A Yr"="Rarely"))
modData2$attend <- revalue(modData2$attend, c("Once A Month"="Frequently", "2-3X A Month"="Frequently", "Nrly Every Week"="Frequently",
"Every Week"="Frequently", "More Thn Once Wk"="Frequently"))
source('~/GitHub/Duke_Statistics_R/Inferential/project/WIPcode.R')
View(modData2)
table(modData)
table(modData2)
plot(modData2$attend, modData2$natspac)
prop.table(modData2)
prop.table(as.table(modData2))
library(brewer)
plot(modData2$attend, modData2$natspac, col(brewer.pal(3, "Set3")))
?brewer.pal
??brewer.pal
p <- brewer.pal(3, "Set3")
library(RColorBrewer)
p <- brewer.pal(3, "Set3")
plot(modData2$attend, modData2$natspac, col=p)
p <- brewer.pal(3, "Accent")
plot(modData2$attend, modData2$natspac, col=p)
?brewer.pal
display.brewer.pal()
plot(modData2$attend, modData2$natspac, col=brewer.pal(3, "Accent"))
plot(gss$attend)
plot(gss$attend,  col=brewer.pal(3, "Accent"))
ggplot(gss, aes(x=attend)) + geom_bar()
ggplot(gss, aes(x=attend, color=attend)) + geom_bar()
ggplot(gss, aes(x=attend, fill=factor(attend))) + geom_bar()
ggplot(gss, aes(x=attend, fill=factor(attend))) + geom_bar() + options(axis.text.x=theme_text(angle=90))
ggplot(gss, aes(x=attend, fill=factor(attend))) + geom_bar() + opts(axis.text.x=theme_text(angle=90))
ggplot(gss, aes(x=attend, fill=factor(attend))) + geom_bar() + theme(axis.text.x=element_text(angle=90))
ggplot(modData2, aes(attend, natspac)) + geom_raster(aes(fill=n(attend)))
library(vcd)
P10 <- mosaic(~attend + natspac, data = modData2, shade=TRUE)
ggplot(gss, aes(x=natspac, fill=factor(attend))) + geom_bar() + theme(axis.text.x=element_text(angle=90))
ggplot(gss, aes(x=natspac, fill=factor(natspac))) + geom_bar() + theme(axis.text.x=element_text(angle=90))
?cumsum
table(modData2)
cumsum(modData2)
class(modData2)
cumsum(modData2$attend)
cumsum(n(modData2$attend))
modData3 <- modData2 %>% mutate(Rarely_Cnt=cumsum(Rarely))
table(modData2)
tmpTable <- table(modData2)
tmpTable
margin.table(tmpTable, 1)
margin.table(tmpTable, 2)
addmargins(tmpTable)
table(modData2)
tmpTable <- table(modData2)
tmpTable <- addmargins(tmpTable)
tmpTable
